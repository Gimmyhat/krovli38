upstream frontend {
    server frontend:80;
}

upstream admin-panel {
    server admin-panel:80;
}

upstream backend {
    server backend:3000;
}

# HTTP server
server {
    listen 80;
    server_name krovlya38.pro www.krovlya38.pro;
    server_tokens off;

    # Проверяем наличие сертификатов
    set $use_https 0;
    if (-f /etc/letsencrypt/live/krovlya38.pro/fullchain.pem) {
        set $use_https 1;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Всегда разрешаем HTTP для health check
    location /api/health {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        if ($use_https = 1) {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /admin {
        if ($use_https = 1) {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://admin-panel;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        if ($use_https = 1) {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /uploads {
        if ($use_https = 1) {
            return 301 https://$host$request_uri;
        }
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# HTTPS server (активируется только при наличии сертификатов)
server {
    listen 443 ssl;
    server_name krovlya38.pro www.krovlya38.pro;
    server_tokens off;

    # Проверяем наличие сертификатов
    if (!-f /etc/letsencrypt/live/krovlya38.pro/fullchain.pem) {
        return 444;
    }

    ssl_certificate /etc/letsencrypt/live/krovlya38.pro/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/krovlya38.pro/privkey.pem;

    # Эти файлы будут созданы certbot'ом при первом получении сертификатов
    ssl_trusted_certificate /etc/letsencrypt/live/krovlya38.pro/chain.pem;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /admin {
        proxy_pass http://admin-panel;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /uploads {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Увеличиваем размер загружаемых файлов
    client_max_body_size 10M;

    # Security headers с разрешением для Cloudinary
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline' 'unsafe-eval'; connect-src 'self' *.cloudinary.com api.cloudinary.com; img-src 'self' data: blob: *.cloudinary.com res.cloudinary.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' *.cloudinary.com; frame-src 'self' *.cloudinary.com data: blob:;" always;
} 