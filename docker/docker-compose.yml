# Main docker-compose configuration for krovli38 project
# Includes frontend, admin panel, backend server, MongoDB, and Nginx reverse proxy

services:
  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD:-admin_password}
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  server:
    image: ${DOCKER_REGISTRY}/krovli38-server:${TAG:-latest}
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - MONGO_USER=${MONGO_USER:-admin}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-admin_password}
      - JWT_SECRET=${JWT_SECRET:-default_jwt_secret}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
      - CLOUDINARY_UPLOAD_PRESET=${CLOUDINARY_UPLOAD_PRESET}
    networks:
      - app-network

  frontend:
    image: ${DOCKER_REGISTRY}/krovli38-frontend:${TAG:-latest}
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - app-network

  admin:
    image: ${DOCKER_REGISTRY}/krovli38-admin:${TAG:-latest}
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - frontend
      - admin
      - server
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data: 