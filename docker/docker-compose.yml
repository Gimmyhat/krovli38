# Main docker-compose configuration for krovli38 project
# Includes frontend, admin panel, backend server, MongoDB, and Nginx reverse proxy

services:
  mongodb:
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  server:
    image: ${DOCKER_REGISTRY}/krovli38-server:${TAG:-latest}
    build:
      context: ..
      dockerfile: ./docker/server/Dockerfile
    restart: unless-stopped
    depends_on:
      - mongodb
    environment:
      - MONGO_USER=${MONGO_USER}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    networks:
      - app-network

  frontend:
    image: ${DOCKER_REGISTRY}/krovli38-frontend:${TAG:-latest}
    build:
      context: ..
      dockerfile: ./docker/frontend/Dockerfile
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - app-network

  admin:
    image: ${DOCKER_REGISTRY}/krovli38-admin:${TAG:-latest}
    build:
      context: ..
      dockerfile: ./docker/admin/Dockerfile
    restart: unless-stopped
    depends_on:
      - server
    networks:
      - app-network

  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
    networks:
      - app-network
      - nginx-proxy

networks:
  app-network:
    driver: bridge
  nginx-proxy:
    driver: bridge

volumes:
  mongodb_data: 