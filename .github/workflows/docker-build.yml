name: Docker Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_HUB_USERNAME: gimmyhat
  FRONTEND_IMAGE: gimmyhat/krovli38-frontend
  ADMIN_IMAGE: gimmyhat/krovli38-admin
  SERVER_IMAGE: gimmyhat/krovli38-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: src
          file: docker/frontend/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.FRONTEND_IMAGE }}:buildcache,mode=max

      - name: Build and push admin panel
        uses: docker/build-push-action@v5
        with:
          context: admin-panel
          file: docker/admin/Dockerfile
          push: true
          tags: ${{ env.ADMIN_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.ADMIN_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.ADMIN_IMAGE }}:buildcache,mode=max

      - name: Build and push server
        uses: docker/build-push-action@v5
        with:
          context: server
          file: docker/server/Dockerfile
          push: true
          tags: ${{ env.SERVER_IMAGE }}:latest
          cache-from: type=registry,ref=${{ env.SERVER_IMAGE }}:buildcache
          cache-to: type=registry,ref=${{ env.SERVER_IMAGE }}:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker/docker-compose.yml,docker/nginx/"
          target: "/root/krovli38"
          strip_components: 1

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /root/krovli38
            echo "DOCKER_HUB_USERNAME=${{ env.DOCKER_HUB_USERNAME }}" > .env
            docker compose pull
            docker compose up -d
            docker system prune -f 